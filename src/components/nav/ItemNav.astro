---
interface Props {
    url: string;
    text: string;
    active: string;
    subItem?: boolean; 
}

const { url, text, active, subItem=false } = Astro.props;

const getActive = () => {
    if (subItem){
        var opc = ""
        text == active ? opc = "SubActive" : "";
        return opc
    } else {
        var opc = ""
        text == active ? opc = "Active" : "";
        return opc
    }
}
---

<a
    class={ `${getActive()} transition-colors duration-300 ease-in-out block px-4 py-2 mt-2 text-sm font-semibold rounded-md dark-mode:bg-gray-700 dark-mode:hover:bg-gray-600 dark-mode:focus:bg-gray-600 dark-mode:focus:text-white dark-mode:hover:text-white dark-mode:text-gray-200 md:mt-0 hover:text-gray-800 focus:text-gray-900 hover:bg-gray-200 focus:bg-gray-200 focus:outline-none focus:shadow-outline`}
    href={url}
>
    {text}
</a>

<style>
    .Active {
        color: #FFF;
        background-color: #358d36;
    }

    .SubActive {
        color: #FFF;
        background-color: #e59547;
    }
</style>
